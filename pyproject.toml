[project]
name = "multi-agent-system"
version = "0.1.0"
description = "A multi-agent system for software development."
requires-python = ">=3.11"
authors = [
    {name = "Pablo Formoso"}
]
dependencies = [
    # LangChain core dependencies
    "langchain>=0.2.0",
    "langchain-core>=0.3.65",
    "langchain-community>=0.3.25",
    "langchain-experimental>=0.3.0",
    "langchain-openai>=0.1.0",
    "langchain-neo4j>=0.1.0",
    # Graph dependencies
    "neo4j>=5.14.0",
    "networkx>=3.2.0",
    # LLM dependencies
    "openai>=1.0.0",
    # Data processing
    "pydantic>=2.5.0",
    "python-dotenv>=1.0.0",
    "numpy>=1.24.0",
    "pandas>=2.0.0",
    "matplotlib>=3.7.0",
    "scikit-learn>=1.3.0",
    # Async support
    "aiohttp>=3.9.0",
    "asyncio>=3.4.3",
    "a2a-sdk>=0.2.5",
    # CLI
    "typer>=0.12.0",
    # Environment management
    "python-dotenv>=1.0.0"
]

[project.optional-dependencies]
develop = [
    "ruff>=0.1.0",
    "black>=23.0.0",
    "pre-commit>=3.0.0",
    "pytest>=7.0.0",
    "pytest-asyncio>=0.23.0",
    "pytest-cov>=4.0.0",
    "pytest-mock>=3.12.0",
    "uv>=0.1.0",
    "ipykernel>=6.0.0",
    "jupyter>=1.0.0"
]

[build-system]
requires = ["setuptools>=61.0"]
build-backend = "setuptools.build_meta"

[tool.setuptools]
package-dir = {"" = "src"}
packages = [
    "multi_agent_system",
    "domain",
    "interfaces",
    "application",
    "infrastructure"
]

[project.scripts]
multi-agent-system = "multi_agent_system.__main__:main"


[tool.black]
target-version = ["py312"]

[tool.ruff]
target-version = "py312"
line-length = 101

[tool.pytest.ini_options]
asyncio_mode = "auto"
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "-v --cov=src --cov-report=term-missing"
markers = [
    "asyncio: mark test as async",
    "integration: mark test as integration test",
    "unit: mark test as unit test"
]
